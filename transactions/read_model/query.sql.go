// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package read_model

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts (id, balance) VALUES ($1, $2) RETURNING id, balance
`

type CreateAccountParams struct {
	ID      int32
	Balance int64
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRow(ctx, createAccount, arg.ID, arg.Balance)
	var i Account
	err := row.Scan(&i.ID, &i.Balance)
	return i, err
}

const deleteAllAccounts = `-- name: DeleteAllAccounts :exec
DELETE FROM accounts
`

func (q *Queries) DeleteAllAccounts(ctx context.Context) error {
	_, err := q.db.Exec(ctx, deleteAllAccounts)
	return err
}

const getAccount = `-- name: GetAccount :one
SELECT id, balance FROM accounts WHERE id = $1 LIMIT 1
`

func (q *Queries) GetAccount(ctx context.Context, id int32) (Account, error) {
	row := q.db.QueryRow(ctx, getAccount, id)
	var i Account
	err := row.Scan(&i.ID, &i.Balance)
	return i, err
}
